<launch><!--ros controller-->>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find raigor_gazebo)/world/eod_scene.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
    <rosparam>
        joint_state_controller:
            type: joint_state_controller/JointStateController
            publish_rate: 10
        sprocket_velocity_controller:
            type: velocity_controllers/JointVelocityController
            joint: sprocket_axle
        joint_position_controller:
            type: effort_controllers/JointPositionController
            joint: push_plate_joint
            pid: {p: 1000.0, i: 0.01, d: 10.0}
    </rosparam>

    <!-- Load the URDF into the ROS Parameter Server -->
    <arg name="model" default="$(find xacro)/xacro  '$(find raigor_description)/urdf/xacro/main.xacro'" />
    <param name="robot_description" command="$(arg model)" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model raigor -param robot_description
          -x 7.0
          -y -5.0
          -z 0.15
          -J shoulder_pan_joint  0
          -J shoulder_lift_joint 0
          -J elbow_joint  0
          -J wrist_1_joint 0
          -J wrist_2_joint 0
          -J wrist_3_joint 0" />

    <rosparam file="$(find gazebo_continuous_track)/config/base_controller.yaml" command="load"/>
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="track_joint_publisher track_velocity_controller"/>

    <node name="cmd_relay" pkg="topic_tools" type="relay" args="/cmd_vel /track_velocity_controller/cmd_vel" output="screen" />

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="joint_position_controller joint_state_controller sprocket_velocity_controller"/>

    <include file="$(find raigor_moveit_config)/launch/raigor_bringup_moveit.launch"/>



    <node pkg="teleop_twist_keyboard" type="twist_to_std_msg.py" name="twist_to_std_msg_node" />
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard_node" launch-prefix="xterm -e"/>
    
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find raigor_description)/rviz/all.rviz" required="true" /> -->



</launch>
