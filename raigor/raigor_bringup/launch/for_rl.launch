<launch>

    <rosparam>
        joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 10
        sprocket_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: sprocket_axle
        joint_position_controller:
        type: effort_controllers/JointPositionController
        joint: push_plate_joint
        pid: {p: 1000.0, i: 0.01, d: 10.0}
    </rosparam>

    <!-- Load the URDF into the ROS Parameter Server -->
    <arg name="model"
        default="$(find xacro)/xacro  '$(find raigor_description)/urdf/xacro/main.xacro'" />
    <param name="robot_description" command="$(arg model)" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args=" -urdf -model raigor -param robot_description
          -x 0.0
          -y 0.0
          -z 0.3
          -R 0.0
          -P 0.0
          -Y 0.0" />


    <rosparam file="$(find gazebo_continuous_track)/config/base_controller.yaml" command="load" />
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="track_joint_publisher track_velocity_controller" />

    <node name="cmd_relay" pkg="topic_tools" type="relay"
        args="/cmd_vel /track_velocity_controller/cmd_vel" output="screen" />

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen"
        args="joint_position_controller joint_state_controller sprocket_velocity_controller" />
    <!-- output="screen" ns="" args="joint_position_controller joint2_position_controller
    joint_state_controller"/> -->
    <!-- rostopic pub /sprocket_velocity_controller/command std_msgs/Float64 "data: 1" -->
    <include file="$(find raigor_moveit_config)/launch/raigor_bringup_moveit.launch" />
</launch>